#!/bin/bash
# shellcheck disable=SC2001
# shellcheck disable=SC1091
# shellcheck disable=SC2086

set -euo pipefail

BASEDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd .. && pwd )"
VERSION=$(<"$BASEDIR/VERSION")

. "$BASEDIR/lib/shared.bash"

echo -e "~~~ :bash: Initializing \033[33mCache\033[0m Buildkite Plugin v$VERSION"

if [[ "${BUILDKITE_PLUGIN_CACHE_DEBUG:-false}" =~ (true|on|1) ]]; then
  set -x
fi

if [[ -n "${BUILDKITE_PLUGIN_CACHE_KEY:-}" ]]; then

  # Defaults...
  RSYNC_ARGS="--ignore-missing-args"
  AWS_ARGS=""
  BACKEND="${BUILDKITE_PLUGIN_CACHE_BACKEND:-tarball}"

  if [[ "$OSTYPE" == "darwin"* ]]; then
    RSYNC_ARGS=""
  fi

  if [[ -n "${BUILDKITE_PLUGIN_CACHE_S3_PROFILE:-}" ]]; then
    AWS_ARGS="--profile ${BUILDKITE_PLUGIN_CACHE_S3_PROFILE}"
  fi

  CACHE_KEY="$(expand_templates "$BUILDKITE_PLUGIN_CACHE_KEY")"

  echo "🔍 Looking for $CACHE_KEY"

  if [ -f "$BASEDIR/lib/backends/$BACKEND.bash" ]; then
      . "$BASEDIR/lib/backends/$BACKEND.bash"
      restore
  else 
      echo "$BACKEND is not supported."
      exit 1
  fi

else
  echo "🚨 Cache is skipped because no cache key provided"
  exit 0
fi
